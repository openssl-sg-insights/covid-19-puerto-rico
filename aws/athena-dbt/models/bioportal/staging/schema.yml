version: 2

models:
  - name: bioportal_orders_basic
    description: >
      A minimally processed and cleaned version of Bioportal's orders/basic API endpoint.
      This data set has the `patient_id` column that allows us to deduplicate tests for
      the same patient (and thus to count cases), but it doesn't have the patient's
      municipality, only the region.
    columns:
      - name: downloaded_at
        description: '{{ doc("downloaded_at") }}'
      - name: collected_date
        description: '{{ doc("collected_date") }}'
        tests:
          - not_null:
              severity: warn
          - dbt_utils.accepted_range:
              min_value: DATE '2020-01-03'
              max_value: reported_date
              inclusive: true
              severity: warn
          - dbt_utils.accepted_range:
              min_value: DATE '2020-01-03'
              max_value: received_date
              inclusive: true
              severity: warn
      - name: received_date
        description: '{{ doc("received_date") }}'
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: collected_date
              max_value: downloaded_at
              inclusive: true
              severity: warn
          - dbt_utils.accepted_range:
              min_value: reported_date
              max_value: downloaded_at
              inclusive: true
              severity: warn
      - name: patient_id
        description: '{{ doc("patient_id") }}'
        tests:
          - not_null
      - name: age_range
        description: '{{ doc("age_range") }}'
        tests:
          - relationships:
              to: ref('bioportal_age_ranges')
              field: age_range
      - name: region
        description: '{{ doc("region") }}'
        tests:
          - relationships:
              to: ref('expected_regions')
              field: region
      - name: test_type
        description: '{{ doc("test_type") }}'
        tests:
          - relationships:
              to: ref('expected_test_types')
              field: test_type
      - name: positive
        description: '{{ doc("positive") }}'
      - name: reported_date
        description: '{{ doc("reported_date") }}'
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: collected_date
              max_value: received_date
              inclusive: true
              severity: warn
      - name: result_created_at
        description: >
          The raw value of the `resultCreatedAt` field in Bioportal. We have a cleaned version of this
          in `received_date`.
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: collected_date
              max_value: downloaded_at
              inclusive: true
              severity: warn
      - name: result
        description: >
          The raw value of the `result` field in Bioportal, which doesn't have much of a
          defined format.  Usually you want the cleaned `positive` field instead.
        tests:
          - relationships:
              to: ref('expected_test_results')
              field: result
      - name: raw_test_type
        description: >
          The raw value of the `testType` field in Bioportal, which doesn't have much of a
          defined format.  Usually you want the cleaned `test_type` field instead.
        tests:
          - relationships:
              to: ref('expected_raw_test_types')
              field: raw_test_type

  - name: minimal_info_unique_tests
    description: >
      A minimally processed and cleaned version of Bioportal's `minimal-info-unique-tests`
      API endpoint.  This data set has one row per test specimen, and identifies the
      municipality of the patient's test, but doesn't have the `patient_id` column.
    columns:
      - name: downloaded_at
        description: '{{ doc("downloaded_at") }}'
      - name: collected_date
        description: '{{ doc("collected_date") }}'
        tests:
          - not_null:
              severity: warn
          - dbt_utils.accepted_range:
              min_value: DATE '2020-01-03'
              max_value: reported_date
              inclusive: true
              severity: warn
      - name: reported_date
        description: '{{ doc("collected_date") }}'
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: DATE '2020-01-03'
              max_value: downloaded_at
              inclusive: true
              severity: warn
      - name: municipality
        tests:
          - relationships:
              enabled: false  # This is very slow and fiddly
              to: ref('municipal_population')
              field: name
              where: >
                municipality NOT LIKE '% Borough'
                  AND municipality NOT LIKE '% County'
                  AND municipality NOT LIKE '% Census Area'
                  AND municipality NOT LIKE '% City'
                  AND municipality NOT LIKE '% city'
                  AND municipality NOT LIKE '% Municipality'
                  AND municipality NOT LIKE '% Parish'
                  AND municipality NOT IN (
                    'No Domiciliado', 'N/A',
                    'District of Columbia'
                  )
      - name: test_type
        description: '{{ doc("test_type") }}'
        tests:
          - relationships:
              enabled: false  # This is slow and we test the same logic elsewhere.
              to: ref('expected_test_types')
              field: test_type

  - name: bioportal_deaths
    description: >
      A minimally processed and cleaned version of Bioportal's `deaths` API endpoint.
      This is one row per death.
    columns:
      - name: downloaded_at
        description: '{{ doc("downloaded_at") }}'
      - name: death_date
        description: The date the patient died.
        tests:
          - not_null:
              severity: warn
          - dbt_utils.accepted_range:
              min_value: DATE '2020-01-03'
              max_value: downloaded_at
              inclusive: true
              severity: warn
          - dbt_utils.accepted_range:
              min_value: DATE '2020-01-03'
              max_value: report_date
              inclusive: true
              severity: warn
      - name: report_date
        tests:
          - not_null:
              severity: warn
          - dbt_utils.accepted_range:
              min_value: DATE '2020-01-03'
              max_value: downloaded_at
              inclusive: true
              severity: warn
      - name: age_range
        description: '{{ doc("age_range") }}'
        tests:
          - relationships:
              to: ref('bioportal_age_ranges')
              field: age_range
      - name: region
        description: '{{ doc("region") }}'
        tests:
          - relationships:
              to: ref('expected_regions')
              field: region
      - name: sex
        tests:
          - relationships:
              to: ref('expected_sex')
              field: sex

